#include <iostream>
#include <windows.h>
#include<algorithm>
using namespace std;

void dfs(int a, int b);

int map[101][101];
bool visit[101][101];
int num[1000];
int  n;
int dx[] = { 1, -1, 0, 0 }; //아래, 위, 오른쪽, 왼쪽
int dy[] = { 0, 0, 1, -1 };
int cnt = 0;
int main(void) {
	cin >> n;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				scanf_s("%1d", &map[i][j]);
			}
		}
		for (int a = 0; a < n; a++) {
			for (int b = 0; b < n; b++) {
				if (map[a][b] && !visit[a][b]) {
					visit[a][b] = true;
					dfs(a, b);
					cnt++;
				}
			}
		}
		cout << cnt << endl;
		sort(num, num + cnt);
		for (int i = 0; i < cnt; i++) {
		
			cout << num[i] << endl;
		}
		system("pause");
	}

void dfs(int x, int y) {
	num[cnt] = num[cnt] + 1;
	for (int i = 0; i < 4; i++) {
		int x1 = x + dx[i];
		int y1 = y + dy[i];

		if (x1 >= 0 && x1 < n && y1 >= 0 && y1 <= n) {
			if (map[x1][y1] && !visit[x1][y1]) {
				visit[x1][y1] = true;
				
				dfs(x1, y1);
			}
		}
	}
}
