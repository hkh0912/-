#include <iostream>
#include <queue>
#include <stdio.h>

using namespace std;

void bfs();

queue<pair<int, int>>q;

int miro[101][101];
int dist[101][101];
int dx[4] = { 1,-1,0,0 };
int dy[4] = { 0,0,1,-1 };
int n, m, a;
int main(void) {
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			scanf_s("%1d", &miro[i][j]);
		}
	}

	bfs();
	cout << dist[n][m];

	//system("pause");

}

void bfs() {
	q.push(make_pair(1,1));
	dist[1][1] = 1;
	
	
	while (!q.empty()) {
		int x1 = q.front().first;
		int y1 = q.front().second;
	
		q.pop();

		if ((x1 == n) && (y1 == m)) {
			break;
		}
		for (int i = 0; i < 4; i++) {
			int x2 = x1 + dx[i];
			int y2 = y1 + dy[i];

			if (x2 >= 1 && x2 <= n && y2 >= 1 && y2 <= m) {
				if (dist[x2][y2] == 0 && miro[x2][y2] == 1){
					q.push(pair<int, int>(x2, y2));
					dist[x2][y2] = dist[x1][y1] + 1;
				}
			}
		}
	}
}
