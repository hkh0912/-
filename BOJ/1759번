#include<iostream>
#include<windows.h>
#include<string>
#include<queue>
#include<algorithm>

using namespace std;

vector<char>q;
void dfs(int index, int cnt);
char arr[20];
bool check[20];
int L, C,mo,ja;

int main(void) {
	cin >> L >> C;
	for (int i = 0; i < C; i++) {
		cin >> arr[i];
	}
	sort(arr, arr + C);
	dfs(0, 0);

	system("pause");
}

void dfs(int index, int cnt)
{
	if (cnt == L) {
		mo = 0;
		ja = 0;
		for (int i = 0; i < q.size(); i++) {
			if (q[i] == 'a' || q[i] == 'e' || q[i] == 'i' || q[i] == 'o' || q[i] == 'u') {
				mo++;
			}
			else {
				ja++;
			}
		}
		if (mo >= 1 && ja >= 2) {
			for (int i = 0; i < q.size(); i++) {
				cout << q[i];
			}
			cout << endl;
		}
		
		return;
	}

	for (int i = index; i < C; i++) {
		if (check[i] == true)continue;
		if (check[i] == false){
			check[i] = true;
			q.push_back(arr[i]);
			dfs(i + 1, cnt + 1);
			q.pop_back();
			check[i] = false;
		
		}
	}
	
}
