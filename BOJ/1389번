#include <iostream>
#include <algorithm>
#include <vector>
#include<windows.h>
#include<queue>
using namespace std;

int n, m;
int a, b;
int visit[1000][1000];
bool check[1000];
int dist[1000];
int kevin[100];
queue<int>q;
void bfs(int a);
int main(void) {
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		cin >> a >> b;
		visit[a][b] = 1;
		visit[b][a] = 1;
	}
	for (int j = 1; j <= n; j++) {
		bfs(j);
	}
	/*for (int i = 1; i <= n; i++) {
		cout << kevin[i] << endl;
	}*/
	int min = kevin[1];
	int min_index = 1;
	for (int i = 1; i <= n; i++) {
		if (min > kevin[i]) {
			min = kevin[i];
			min_index = i;
		}
	}
	cout << min_index << endl;
	system("pause");
}

void bfs(int x) {
	q.push(x);
	check[x] = true;

	while (!q.empty()) {
		int y = q.front();
		q.pop();
		for (int i = 1; i <= n; i++) {
			if (visit[y][i] == 1 && check[i] == false) {
				q.push(i);
				check[i] = true;
				dist[i] = dist[y] + 1;
				//cout << "dist[i] :" << dist[i];
			}
		}
	}
	
	int sum = 0;
	for (int w = 1; w <= n; w++) {
		sum = sum + dist[w];
	}
	//cout << sum << endl;
	kevin[x] = sum;
	
	for (int i = 1; i <= n; i++) {
		dist[i] = 0;
		check[i] = 0;
	}


}
